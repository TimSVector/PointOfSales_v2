-- VectorCAST 25.sp4 (08/19/25)
-- Test Case Script
--
-- Environment    : SIMPLE_ADA_TEST
-- Unit(s) Under Test: WHITEBOX
--
-- Script Features
TEST.SCRIPT_FEATURE:MULTIPLE_UUT_SUPPORT
TEST.SCRIPT_FEATURE:MIXED_CASE_NAMES
TEST.SCRIPT_FEATURE:ADA_DIRECT_ARRAY_INDEXING
--

-- Subprogram: <<INIT>>

-- Test Case: <<INIT>>.001
TEST.SUBPROGRAM:<<INIT>>
TEST.NEW
TEST.NAME:<<INIT>>.001
TEST.END

-- Unit: MANAGER

-- Subprogram: "&"

-- Test Case: &.001
TEST.UNIT:MANAGER
TEST.SUBPROGRAM:"&"
TEST.NEW
TEST.NAME:&.001
TEST.VALUE:MANAGER."&".X:1
TEST.VALUE:MANAGER."&".Y:1
TEST.EXPECTED:MANAGER."&".return:1
TEST.END

-- Subprogram: "-"

-- Test Case: +.001
TEST.UNIT:MANAGER
TEST.SUBPROGRAM:"-"
TEST.NEW
TEST.NAME:+.001
TEST.VALUE:MANAGER."-".X:1
TEST.VALUE:MANAGER."-".Y:2
TEST.EXPECTED:MANAGER."-".return:1
TEST.END

-- Subprogram: PLACE_ORDER

-- Test Case: PLACE_ORDER.Steak.CF
TEST.UNIT:MANAGER
TEST.SUBPROGRAM:PLACE_ORDER
TEST.NEW
TEST.NAME:PLACE_ORDER.Steak.CF
TEST.VALUE:MANAGER.PLACE_ORDER.TABLE:1
TEST.VALUE:MANAGER.PLACE_ORDER.SEAT:1
TEST.VALUE:MANAGER.PLACE_ORDER.ORDER.ENTREE:STEAK
TEST.FLOW
  MANAGER.PLACE_ORDER
  MANAGER.PLACE_ORDER
TEST.END_FLOW
TEST.END

-- Test Case: PLACE_ORDER.Steak.EV
TEST.UNIT:MANAGER
TEST.SUBPROGRAM:PLACE_ORDER
TEST.NEW
TEST.NAME:PLACE_ORDER.Steak.EV
TEST.VALUE:MANAGER.PLACE_ORDER.TABLE:1
TEST.VALUE:MANAGER.PLACE_ORDER.SEAT:1
TEST.VALUE:MANAGER.PLACE_ORDER.ORDER.ENTREE:STEAK
TEST.FLOW
  MANAGER.PLACE_ORDER
  MANAGER.PLACE_ORDER
TEST.END_FLOW
TEST.END

-- Test Case: PLACE_ORDER.Steak.NoEV
TEST.UNIT:MANAGER
TEST.SUBPROGRAM:PLACE_ORDER
TEST.NEW
TEST.NAME:PLACE_ORDER.Steak.NoEV
TEST.VALUE:MANAGER.PLACE_ORDER.TABLE:1
TEST.VALUE:MANAGER.PLACE_ORDER.SEAT:1
TEST.VALUE:MANAGER.PLACE_ORDER.ORDER.ENTREE:STEAK
TEST.END

-- Unit: WHITEBOX

-- Subprogram: CREATE_POINTER

-- Test Case: CREATE_POINTER-PATH-001
TEST.UNIT:WHITEBOX
TEST.SUBPROGRAM:CREATE_POINTER
TEST.NEW
TEST.NAME:CREATE_POINTER-PATH-001
TEST.BASIS_PATH:1 of 1
TEST.NOTES:
   No branches in subprogram
   Test Case Generation Notes:
TEST.END_NOTES:
TEST.END

-- Subprogram: INITIALIZE

-- Test Case: INITIALIZE-PATH-001
TEST.UNIT:WHITEBOX
TEST.SUBPROGRAM:INITIALIZE
TEST.NEW
TEST.NAME:INITIALIZE-PATH-001
TEST.BASIS_PATH:1 of 1
TEST.NOTES:
   No branches in subprogram
   Test Case Generation Notes:
TEST.END_NOTES:
TEST.END

-- Subprogram: INIT_COLOR

-- Test Case: INIT_COLOR-PATH-001
TEST.UNIT:WHITEBOX
TEST.SUBPROGRAM:INIT_COLOR
TEST.NEW
TEST.NAME:INIT_COLOR-PATH-001
TEST.BASIS_PATH:1 of 1
TEST.NOTES:
   No branches in subprogram
   Test Case Generation Notes:
TEST.END_NOTES:
TEST.END

-- Subprogram: INIT_DAY

-- Test Case: INIT_DAY-PATH-001
TEST.UNIT:WHITEBOX
TEST.SUBPROGRAM:INIT_DAY
TEST.NEW
TEST.NAME:INIT_DAY-PATH-001
TEST.BASIS_PATH:1 of 1
TEST.NOTES:
   No branches in subprogram
   Test Case Generation Notes:
TEST.END_NOTES:
TEST.END

-- Subprogram: MY_ADD_INCLUDED_DESSERT

-- Test Case: BASIS-PATH-001
TEST.UNIT:WHITEBOX
TEST.SUBPROGRAM:MY_ADD_INCLUDED_DESSERT
TEST.NEW
TEST.NAME:BASIS-PATH-001
TEST.BASIS_PATH:1 of 3
TEST.NOTES:
This is an automatically generated test case.
   Test Path 1
      (1) if MYORDER.ENTREE = STEAK AND MYORDER.SALAD = CAESAR AND MYORDER.BEVERAGE = MIXED_DRINK ==> FALSE
      (2) elsif MYORDER.ENTREE = LOBSTER AND MYORDER.SALAD = GREEN AND MYORDER.BEVERAGE = WINE ==> FALSE
   Test Case Generation Notes:
TEST.END_NOTES:
TEST.VALUE:WHITEBOX.MY_ADD_INCLUDED_DESSERT.MYORDER.SALAD:<<MIN>>
TEST.VALUE:WHITEBOX.MY_ADD_INCLUDED_DESSERT.MYORDER.ENTREE:<<MIN>>
TEST.VALUE:WHITEBOX.MY_ADD_INCLUDED_DESSERT.MYORDER.BEVERAGE:<<MIN>>
TEST.END

-- Test Case: BASIS-PATH-002
TEST.UNIT:WHITEBOX
TEST.SUBPROGRAM:MY_ADD_INCLUDED_DESSERT
TEST.NEW
TEST.NAME:BASIS-PATH-002
TEST.BASIS_PATH:2 of 3
TEST.NOTES:
This is an automatically generated test case.
   Test Path 2
      (1) if MYORDER.ENTREE = STEAK AND MYORDER.SALAD = CAESAR AND MYORDER.BEVERAGE = MIXED_DRINK ==> FALSE
      (2) elsif MYORDER.ENTREE = LOBSTER AND MYORDER.SALAD = GREEN AND MYORDER.BEVERAGE = WINE ==> TRUE
   Test Case Generation Notes:
TEST.END_NOTES:
TEST.VALUE:WHITEBOX.MY_ADD_INCLUDED_DESSERT.MYORDER.SALAD:GREEN
TEST.VALUE:WHITEBOX.MY_ADD_INCLUDED_DESSERT.MYORDER.ENTREE:LOBSTER
TEST.VALUE:WHITEBOX.MY_ADD_INCLUDED_DESSERT.MYORDER.BEVERAGE:WINE
TEST.END

-- Test Case: BASIS-PATH-003
TEST.UNIT:WHITEBOX
TEST.SUBPROGRAM:MY_ADD_INCLUDED_DESSERT
TEST.NEW
TEST.NAME:BASIS-PATH-003
TEST.BASIS_PATH:3 of 3
TEST.NOTES:
This is an automatically generated test case.
   Test Path 3
      (1) if MYORDER.ENTREE = STEAK AND MYORDER.SALAD = CAESAR AND MYORDER.BEVERAGE = MIXED_DRINK ==> TRUE
   Test Case Generation Notes:
TEST.END_NOTES:
TEST.VALUE:WHITEBOX.MY_ADD_INCLUDED_DESSERT.MYORDER.SALAD:CAESAR
TEST.VALUE:WHITEBOX.MY_ADD_INCLUDED_DESSERT.MYORDER.ENTREE:STEAK
TEST.VALUE:WHITEBOX.MY_ADD_INCLUDED_DESSERT.MYORDER.BEVERAGE:MIXED_DRINK
TEST.END

-- COMPOUND TESTS

TEST.SUBPROGRAM:<<COMPOUND>>
TEST.NEW
TEST.NAME:<<COMPOUND>>.001
TEST.SLOT: "1", "MANAGER", "PLACE_ORDER", "1", "PLACE_ORDER.Steak.EV"
TEST.SLOT: "2", "MANAGER", "PLACE_ORDER", "1", "PLACE_ORDER.Steak.NoEV"
TEST.SLOT: "3", "MANAGER", "PLACE_ORDER", "1", "PLACE_ORDER.Steak.CF"
TEST.END
--

-- COMPOUND TESTS

TEST.SUBPROGRAM:<<COMPOUND>>
TEST.NEW
TEST.NAME:<<COMPOUND>>.002
TEST.SLOT: "1", "MANAGER", "PLACE_ORDER", "1", "PLACE_ORDER.Steak.EV"
TEST.SLOT: "2", "MANAGER", "PLACE_ORDER", "1", "PLACE_ORDER.Steak.CF"
TEST.END
--
